let boxes=document.querySelectorAll(".box");
let resetBtn=document.querySelector(".reset-btn");
let newGameBtn=document.querySelector(".new-btn");
let msgContainer=document.querySelector(".msg-container");
let msg = document.querySelector(".msg");



let turnO=true;

const winPattern=[
    [0,1,2],
    [0,3,6],
    [0,4,8],
    [1,4,7],
    [2,5,8],
    [2,4,6],
    [3,4,5],
    [6,7,8]
];

boxes.forEach((box) =>{
    box.addEventListener("click", () =>{
       
          if(turnO){
               box.innerText="O";
               turnO = false;
          }
          else{
            box.innerText="X"
            turnO = true;
          }
          box.disabled=true;
          checkWinner();
    });
});
const disableBoxes=()=>{
    for(let box of boxes){
        box.disabled=true;
    }
};

const enableBoxes=()=>{
    for(let box of boxes){
        box.disabled=false;
        box.innerText ="";
    }
};

const showWinner=(winner)=>{
    msg.innerText=`Congratulations, Winner is ${winner}`;
    msgContainer.classList.remove("hide");
    disableBoxes();
};

const checkWinner=()=>{
    for(let pattern of winPattern){
        console.log(boxes[pattern[0],pattern[1],pattern[2]]);
       
       let pos1Val  =  boxes[pattern[0]].innerText;
       let pos2Val  =  boxes[pattern[1]].innerText;
       let pos3Val  =  boxes[pattern[2]].innerText;

       if(pos1Val !="" && pos2Val != "" && pos3Val != "")
       {
        if(pos1Val === pos2Val && pos2Val===pos3Val){
            console.log("winner",pos1Val);

            showWinner(pos1Val);
        }
       }
    }
};

const resetGame=()=>{
    turnO=true;
    enableBoxes();
    msgContainer.classList.add("hide");
};

newGameBtn.addEventListener("click",resetGame);
resetBtn.addEventListener("click",resetGame);
=====================================================================
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Tic-Tac-Toe Game</title>
    <link rel="stylesheet" href="style.css">
</head>
<body>
    <div class="msg-container hide">
        <p class="msg">Winner</p>
         <button class="new-btn">New Game</button>
    </div>
    <main>
        <h1>Tic Tac Toe</h1>
        <div class="container">
        <div class="game">
            <button class="box"></button>
            <button class="box"></button>
            <button class="box"></button>
            <button class="box"></button>
            <button class="box"></button>
            <button class="box"></button>
            <button class="box"></button>
            <button class="box"></button>
            <button class="box"></button>
            </div>
        </div>
   <button class="reset-btn">
    Reset Game
   </button>
    </main>
    <script src="app.js"></script>
</body>
</html>
===================================================================
*{
    margin: 0;
    padding: 0;
}

body{
    background-color:#34A0A4 ;
    text-align: center;
}

.container{
    height: 70vh;
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    align-items: center;
}

.game{
    height: 60vmin;
    width: 60vmin;
   display: flex;
   flex-wrap: wrap;
   justify-content: center;
   align-items: center;
   gap: 1.5vmin;


}

.box{
    height: 18vmin;
    width: 18vmin;
    border-radius: 1rem;
    border: none;
    box-shadow: 0 0 1rem rgba(0, 0, 0, 0.3);
     font-size: 8vmin;
     color: #b0413e;
     background:#ffffc7;
}

.reset-btn{
    padding: 1rem;
    font-size: 1.25rem;
    background-color: #191913;
    color: aliceblue;
    border-radius: 1rem;
    border: none;
}

.new-btn{
    padding: 1rem;
    font-size: 1.25rem;
    background-color: #191913;
    color: aliceblue;
    border-radius: 1rem;
    border: none;
}

.msg{
    color: #ffffc7;
    font-size: 5vmin;
}

.msg-container{
    height: 30vmin;
    display: flex;
    justify-content: center;
    align-items: center;
    flex-direction: column;
    gap: 4rem;
}

.hide{
    display: none;
}